/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package buscador;

import static buscador.NUEVO_PEDIDO.columna;
import static buscador.NUEVO_PEDIDO.fila;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import static javax.swing.SwingConstants.TOP;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class BUSCAR_CLIENTE extends javax.swing.JFrame {
    
    DefaultTableModel tabla;
    List datos_personales;

    public List getDatos_personales() {
        return datos_personales;
    }

    public void setDatos_personales(List datos_personales) {
        this.datos_personales = datos_personales;
    }
    public static int columna,fila;
    conexion c=new conexion();
        Statement st;
        Connection conet;
        ResultSet rs;

    

    /**
     * Creates new form catalogo
     */
    public BUSCAR_CLIENTE() {
        initComponents();
                 inicio();



    }
void inicio(){
    datos_personales=new ArrayList();
this.setTitle("buscar cliente");
this.setResizable(false);
setLocationRelativeTo(null);
        this.tabla_libros.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        String[] id={"dni","NOMBRE","DIRECCION"};
    tabla=new DefaultTableModel();
    tabla_libros.setRowHeight(20);
    tabla.setColumnIdentifiers(id);
    tabla_libros.setModel(tabla);

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_libros = new javax.swing.JTable();
        area_texto_DNI = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscador = new javax.swing.JToggleButton();
        SELECCIONAR = new javax.swing.JButton();
        CANCELAR = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        area_texto_NOMBRE = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_libros.setAutoCreateRowSorter(true);
        tabla_libros.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabla_libros.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tabla_libros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "dni", "CLIENTE", "DIRECCION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_libros.setToolTipText("");
        tabla_libros.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tabla_libros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_librosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_librosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_libros);
        if (tabla_libros.getColumnModel().getColumnCount() > 0) {
            tabla_libros.getColumnModel().getColumn(0).setResizable(false);
            tabla_libros.getColumnModel().getColumn(1).setResizable(false);
            tabla_libros.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 590, 200));

        area_texto_DNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                area_texto_DNIActionPerformed(evt);
            }
        });
        jPanel2.add(area_texto_DNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 210, 38));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setText("BUSCAR CLIENTES");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        buscador.setBackground(new java.awt.Color(0, 204, 204));
        buscador.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buscador.setForeground(new java.awt.Color(255, 255, 255));
        buscador.setText("BUSCAR ");
        buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscadorActionPerformed(evt);
            }
        });
        jPanel2.add(buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 160, 37));

        SELECCIONAR.setBackground(new java.awt.Color(0, 204, 204));
        SELECCIONAR.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        SELECCIONAR.setForeground(new java.awt.Color(255, 255, 255));
        SELECCIONAR.setText("SELECCIONAR");
        SELECCIONAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SELECCIONARActionPerformed(evt);
            }
        });
        jPanel2.add(SELECCIONAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, 140, 40));

        CANCELAR.setBackground(new java.awt.Color(0, 204, 204));
        CANCELAR.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        CANCELAR.setForeground(new java.awt.Color(255, 255, 255));
        CANCELAR.setText("CANCELAR");
        CANCELAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CANCELARActionPerformed(evt);
            }
        });
        jPanel2.add(CANCELAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 100, 40));

        jLabel2.setText("POR NOMBRE");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, -1, -1));

        jLabel3.setText("DNI");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        area_texto_NOMBRE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                area_texto_NOMBREActionPerformed(evt);
            }
        });
        jPanel2.add(area_texto_NOMBRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 210, 38));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void area_texto_DNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_area_texto_DNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_area_texto_DNIActionPerformed

    private void buscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscadorActionPerformed
        String busqueda_dni=area_texto_DNI.getText();
        String busqueda_nombre=area_texto_NOMBRE.getText();
         String sql="SELECT * \n" +
"FROM clientes \n" +
"WHERE ('' = '"+busqueda_dni+"' OR dni LIKE CONCAT('%', '"+busqueda_dni+"', '%'))\n" +
"  AND ('' = '"+busqueda_nombre+"' OR nombre LIKE CONCAT('%', '"+busqueda_nombre+"', '%'));";
         
          consultar(sql);
        
    }//GEN-LAST:event_buscadorActionPerformed

    private void SELECCIONARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECCIONARActionPerformed
       NUEVO_PEDIDO np=new NUEVO_PEDIDO();
       Object[]f=(Object[]) datos_personales.get(0);
       np.setNombre(f);
       np.setVisible(true);
       setVisible(false);
    }//GEN-LAST:event_SELECCIONARActionPerformed

    private void tabla_librosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_librosMouseClicked
        
        columna=tabla_libros.getColumnModel().getColumnIndexAtX(evt.getX());
        fila=evt.getY()/tabla_libros.getRowHeight();
        if(columna<=tabla_libros.getColumnCount()&&columna>=0 &&fila<=tabla_libros.getRowCount()&&fila>=0){
            Object objet=tabla_libros.getValueAt(fila, columna);
            if(objet instanceof JButton){
            String t= String.valueOf(tabla_libros.getValueAt(fila, 0));
            detalles de=new detalles();
            de.setDato(t);
            de.setVisible(true);
            this.setVisible(false);
            
            }
    }
        
        
    }//GEN-LAST:event_tabla_librosMouseClicked

    private void CANCELARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CANCELARActionPerformed
     NUEVO_PEDIDO np=new NUEVO_PEDIDO();
        np.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_CANCELARActionPerformed

    private void area_texto_NOMBREActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_area_texto_NOMBREActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_area_texto_NOMBREActionPerformed

    private void tabla_librosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_librosMousePressed
       fila=evt.getY()/tabla_libros.getRowHeight();
        if(columna<=tabla_libros.getColumnCount()&&columna>=0 &&fila<=tabla_libros.getRowCount()&&fila>=0){
            JOptionPane.showMessageDialog(null, "presiona");
            Object[] o=new Object[2];
            o[1]=tabla_libros.getValueAt(fila, 1);
            o[0]=tabla_libros.getValueAt(fila, 0);
            datos_personales.add(o);
            setDatos_personales(datos_personales);
        }
    }//GEN-LAST:event_tabla_librosMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        
        
        
        
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BUSCAR_CLIENTE().setVisible(true);
            }
        });
    }
  
    
    
     void consultar(String sql) {
         tabla.setRowCount(0);
    try {
        
        conet=c.getConexion();
        st=conet.createStatement();
        rs=st.executeQuery(sql);
        Object[]f=new Object[3];
        while (rs.next()) {        
        f[0]=rs.getInt("dni");
        f[1]=rs.getString("nombre");
        f[2]=rs.getString("direccion");
        tabla.addRow(f);
    }
        if(tabla.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "no hay resultados");
            area_texto_DNI.setText("");
            area_texto_NOMBRE.setText("");
         
        } else {

          tabla_libros.setModel(tabla);
        }
        
  
    } catch (Exception e) {
    }
}
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CANCELAR;
    private javax.swing.JButton SELECCIONAR;
    private javax.swing.JTextField area_texto_DNI;
    private javax.swing.JTextField area_texto_NOMBRE;
    private javax.swing.JToggleButton buscador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_libros;
    // End of variables declaration//GEN-END:variables
}
